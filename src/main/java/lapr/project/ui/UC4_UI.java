/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lapr.project.ui;

import java.io.FileNotFoundException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import lapr.project.controller.UC4_Controller;
import lapr.project.model.Application;
import lapr.project.model.Decision;
import lapr.project.model.Event;
import lapr.project.model.EventCenter;
import lapr.project.model.User;
import lapr.project.utils.ExportData;

/**
 *
 * @author Pedro
 */
public class UC4_UI extends javax.swing.JFrame {

    static final long serialVersionUID = -3387516993124229948L;

    private EventCenter ec;
    private UC4_Controller c;
    private User u;
    private Event selectedEvent;
    private Application selectedApplication;

    /**
     * Creates new form UC4_UI
     *
     * @param ec
     * @param u
     */
    public UC4_UI(EventCenter ec, User u) {
        this.ec = ec;
        this.u = u;
        this.c = new UC4_Controller(ec, u);
        initComponents();
        this.setVisible(true);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                if (JOptionPane.showConfirmDialog(UC4_UI.this, "Do you wish to exit without saving?", "Close", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    try {
                        ExportData.serialization(ec);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(UC4_UI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    dispose();
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        eventList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        applicationList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        knowledgeField = new javax.swing.JComboBox<>();
        adequacyField = new javax.swing.JComboBox<>();
        invitationsField = new javax.swing.JComboBox<>();
        recommendationField = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        finalDecision = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        justificationField = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        decideButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("UC4 - Decide Application");

        jLabel1.setText("Select an Event:");

        eventList.setModel(new javax.swing.AbstractListModel<String>() {
            static final long serialVersionUID = -3387516993124229948L;
            String[] strings = events();
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        eventList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eventListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(eventList);

        applicationList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                applicationListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(applicationList);

        jLabel2.setText("Select an Application:");

        jLabel3.setText("Parameters [0 - 5]:");

        jLabel4.setText("FAE's knowledge about the Event topic: ");

        jLabel5.setText("Application adequacy for the event:");

        jLabel6.setText("Invitations quantity adequacy for the application:");

        jLabel7.setText("Overall recommendation:");

        knowledgeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5" }));

        adequacyField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"0", "1", "2", "3", "4", "5" }));

        invitationsField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"0", "1", "2", "3", "4", "5" }));

        recommendationField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] {"0", "1", "2", "3", "4", "5" }));

        jLabel8.setText("Final Decision:");

        finalDecision.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Accept" , "Reject" }));

        justificationField.setColumns(20);
        justificationField.setLineWrap(true);
        justificationField.setRows(5);
        jScrollPane3.setViewportView(justificationField);

        jLabel9.setText("Short justification:");

        decideButton.setText("Decide");
        decideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decideButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(adequacyField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(invitationsField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(recommendationField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(knowledgeField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(finalDecision, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(32, 32, 32))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(297, 297, 297)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(cancelButton)
                            .addGap(34, 34, 34)
                            .addComponent(decideButton))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                            .addComponent(jScrollPane3))))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(knowledgeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(adequacyField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(invitationsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(recommendationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(finalDecision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(decideButton)
                    .addComponent(cancelButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eventListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventListMouseClicked
        this.selectedEvent = c.getEventsWhereUserIsFAE().get(eventList.getSelectedIndex());
        String[] modelList = applications();

        applicationList.setModel(new javax.swing.AbstractListModel<String>() {
            static final long serialVersionUID = -3387516993124229948L;

            public int getSize() {
                return modelList.length;
            }

            public String getElementAt(int index) {
                return modelList[index];
            }
        });
    }//GEN-LAST:event_eventListMouseClicked

    private void applicationListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applicationListMouseClicked
        this.selectedApplication = ec.getEventRegister().getEventList().get(eventList.getSelectedIndex()).getApplicationList().getApplications().get(applicationList.getSelectedIndex());

        JOptionPane.showMessageDialog(UC4_UI.this, selectedApplication.toString());
    }//GEN-LAST:event_applicationListMouseClicked

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        if (JOptionPane.showConfirmDialog(UC4_UI.this, "Do you wish to exit without saving?", "Close", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            dispose();
            new MainWindow(u, ec);
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void decideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decideButtonActionPerformed
        if (applicationList.getSelectedIndex() != -1) {
            if (!(("").equals(justificationField.getText()))) {
                if (JOptionPane.showConfirmDialog(UC4_UI.this, "Are you sure you want to submit this decision?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                    createDecision();
                    System.out.println(selectedApplication.getDecisionList());
                    dispose();
                    new MainWindow(u, ec);
                }
            } else {
                JOptionPane.showMessageDialog(UC4_UI.this, "Please provide a short justification", "Error", JOptionPane.OK_OPTION);
            }
        } else {
            JOptionPane.showMessageDialog(UC4_UI.this, "Please select an Application", "Error", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_decideButtonActionPerformed

    /**
     * This method returns the whole event list to use in the JList
     *
     * @return returns the string array with the names
     */
    private String[] events() {

        String[] names = new String[c.getEventsWhereUserIsFAE().size()];
        int cont = 0;
        for (Event e : c.getEventsWhereUserIsFAE()) {
            names[cont] = e.getTitle();
            cont++;
        }
        return names;
    }

    private void createDecision() {

        if (finalDecision.getSelectedItem().equals("Accept")) {
            selectedApplication.addDecision(new Decision(true, justificationField.getText(), knowledgeField.getSelectedIndex(), adequacyField.getSelectedIndex(), invitationsField.getSelectedIndex(), recommendationField.getSelectedIndex(), u.getUsername()));
            selectedApplication.setDecisionStatus(1);
        } else {
            selectedApplication.addDecision(new Decision(false, justificationField.getText(), knowledgeField.getSelectedIndex(), adequacyField.getSelectedIndex(), invitationsField.getSelectedIndex(), recommendationField.getSelectedIndex(), u.getUsername()));
            selectedApplication.setDecisionStatus(-1);
        }

    }

    /**
     * This method returns the whole application list of an event to use in the
     * JList
     *
     * @return returns the string array with the names
     */
    private String[] applications() {
        String[] names = new String[selectedEvent.getApplicationList().getApplications().size()];
        int cont = 0;
        for (Application a : selectedEvent.getApplicationList().getApplications()) {
            names[cont] = a.getCompanyName();
            cont++;
        }
        return names;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> adequacyField;
    private javax.swing.JList<String> applicationList;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton decideButton;
    private javax.swing.JList<String> eventList;
    private javax.swing.JComboBox<String> finalDecision;
    private javax.swing.JComboBox<String> invitationsField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea justificationField;
    private javax.swing.JComboBox<String> knowledgeField;
    private javax.swing.JComboBox<String> recommendationField;
    // End of variables declaration//GEN-END:variables
}
